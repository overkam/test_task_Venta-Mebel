{"version":3,"sources":["logo.svg","ellipse.svg","components/Header.js","cross.svg","red_cross.svg","check.svg","redux/reducer.js","components/TextField.js","components/Title.js","components/EmptyButton.js","arrow_unactive.svg","arrow_hover.svg","components/FilledButton.js","components/LoginForm.js","warning.svg","components/ForgetForm.js","App.js","redux/store.js","index.js"],"names":["Header","isLogged","useSelector","state","correctData","className","src","ellipse","alt","logo","LOGIN_CHECK","RETRY","MOVE_LOGIN","REG_EXP1","REG_EXP2","LOGIN","PASSWORD","initialState","invalidEmail","invalidPassword","wrongData","isMoveLogin","retryCreator","type","moveLoginCreator","reducer","action","test","payload","length","TextField","props","imageSrc","cross","useState","show","setShow","itemClass","setItemClass","errorClass","setErrorClass","inputValue","setInputValue","errorMessage","setErrorMessage","dispatch","useDispatch","appState","isForget","check","classType","onClick","title","textType","placeholder","value","onChange","e","target","red_cross","Title","message","EmptyButton","text","FilledButton","arrowHover","setArrowHover","onMouseOver","arrow","onMouseLeave","arrow_hover","arrow_unactive","LoginForm","isMove","onSubmit","preventDefault","nativeEvent","submitter","trim","ForgetForm","warning","App","store","createStore","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.464e3027.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.216866a6.svg\";","export default __webpack_public_path__ + \"static/media/ellipse.f4884ca9.svg\";","import logo from \"../logo.svg\";\r\nimport ellipse from \"../ellipse.svg\";\r\nimport \"../App.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Header() {\r\n  const isLogged = useSelector((state) => state.correctData);\r\n\r\n  return (\r\n    <div className={`header ${isLogged ? \"logged\" : \"\"} `}>\r\n      {isLogged ? null : <img src={ellipse} alt='' />}\r\n      <img src={logo} className=\"header__logo\" alt='' />\r\n      <div className=\"header__info\">Корпоративная информационная система</div>\r\n      <div className={`header__greeting ${isLogged ? \"logged\" : \"\"} `}>\r\n        Добрый день, Владислав!\r\n      </div>\r\n      <div className={`header__loader ${isLogged ? \"logged\" : \"\"} `}>\r\n        {\" \"}\r\n        <div className=\"lds-ring\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/cross.42e25dea.svg\";","export default __webpack_public_path__ + \"static/media/red_cross.b2709074.svg\";","export default __webpack_public_path__ + \"static/media/check.88895856.svg\";","const LOGIN_CHECK = \"LOGIN_CHECK\";\r\nconst RETRY = \"RETRY\";\r\nconst MOVE_LOGIN = 'MOVE_LOGIN'\r\nconst REG_EXP1 = /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i;\r\nconst REG_EXP2 = /^[0-9a-z_-]+\\.[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i;\r\nexport const LOGIN = \"pinchuk.fl@yandex.ru\";\r\nexport const PASSWORD = \"12345678\";\r\n\r\nconst initialState = {\r\n  invalidEmail: false,\r\n  invalidPassword: false,\r\n  wrongData: false,\r\n  correctData: false,\r\n  isMoveLogin: false,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_CHECK: {\r\n      if (!REG_EXP1.test(action.payload[0])&&!REG_EXP2.test(action.payload[0])) {\r\n        return {\r\n          ...state,\r\n          invalidEmail: true,\r\n        };\r\n      } else if (action.payload[1].length < 8) {\r\n        return {\r\n          ...state,\r\n          invalidPassword: true,\r\n        };\r\n      } else if (\r\n        action.payload[0] === LOGIN &&\r\n        action.payload[1] === PASSWORD\r\n      ) {\r\n        return {\r\n          ...state,\r\n          correctData: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          wrongData: true,\r\n        };\r\n      }\r\n    }\r\n    case RETRY: {\r\n      return {\r\n        ...state,\r\n        invalidEmail: false,\r\n        invalidPassword: false,\r\n        wrongData: false,\r\n        correctData: false,\r\n      };\r\n    }\r\n    case MOVE_LOGIN: {\r\n      return {\r\n        ...state,\r\n        isMoveLogin: !state.isMoveLogin\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loginCheckCreator = (payload) => ({\r\n  type: LOGIN_CHECK,\r\n  payload,\r\n});\r\n\r\nexport const retryCreator = () => ({\r\n  type: RETRY,\r\n});\r\n\r\nexport const moveLoginCreator = () => ({\r\n  type: MOVE_LOGIN\r\n})\r\n\r\nexport default reducer;\r\n","import { useState } from \"react\";\nimport \"../App.css\";\nimport cross from \"../cross.svg\";\nimport red_cross from \"../red_cross.svg\";\nimport check from \"../check.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { retryCreator } from \"../redux/reducer\";\n\nfunction TextField(props) {\n  let imageSrc = cross\n  const [show, setShow] = useState(false);\n  const [itemClass, setItemClass] = useState(\"\");\n  const [errorClass, setErrorClass] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const appState = useSelector((state) => state);\n\n  if (appState.invalidEmail && props.type === \"text\") {\n    setErrorClass(\"invalid\");\n    setErrorMessage(\"Введите корректный e-mail\");\n    dispatch(retryCreator());\n  }\n  if (appState.wrongData && props.type === \"text\") {\n    setErrorClass(\"invalid\");\n    setErrorMessage(\"Неверный e-mail или пароль\");\n    dispatch(retryCreator());\n  }\n  if (appState.invalidPassword && props.type === \"password\") {\n    setErrorClass(\"invalid\");\n    setErrorMessage(\"Пароль должен составлять не менее 8 символов\");\n    dispatch(retryCreator());\n  }\n\n  const onItemClick = () => {\n    setItemClass(\"-clicked\");\n    setShow(true);\n  };\n\n  const onInputClear = () => {\n    setInputValue(\"\");\n    setErrorClass(\"\");\n    setErrorMessage(\"\");\n  };\n\n  const onInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  if (itemClass&&appState.isMoveLogin&&!props.isForget) {\n    setErrorClass(\"\");\n    setInputValue(\"\");\n    setErrorMessage(\"\");\n    setItemClass(\"\");\n    setShow(false);\n  }\n\n  if(itemClass&&!appState.isMoveLogin&&props.isForget) {\n    setInputValue(\"\");\n    setItemClass(\"\");\n    setShow(false);\n  }\n\n  if(appState.correctData) {\n    imageSrc = check\n  }\n\n  return (\n    <div>\n      <div\n        className={`form__${props.classType}${itemClass} ${errorClass} `}\n        onClick={onItemClick}\n      >\n        <div className={`form__${props.classType}-label${itemClass}`}>\n          {props.title}\n        </div>\n        {show ? (\n          <input\n            className={`form__${props.classType}-${props.textType}`}\n            placeholder={props.placeholder}\n            type={props.type}\n            value={inputValue}\n            onChange={onInputChange}\n          />\n        ) : null}\n        {inputValue ? (\n          <button className=\"clear__btn\" onClick={onInputClear}>\n            {errorClass ? <img src={red_cross} alt='' /> : <img src={imageSrc} alt='' />}\n          </button>\n        ) : null}\n        {errorMessage ? (\n          <div className=\"form__error-message\">{errorMessage}</div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default TextField;\n","import '../App.css'\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"form__title\">{props.message}</div>)\r\n}\r\n\r\nexport default Title","import '../App.css'\r\n\r\nfunction EmptyButton (props) {\r\n  return <button className={`${props.classType}__btn`} >{props.text}</button>\r\n}\r\n\r\nexport default EmptyButton","export default __webpack_public_path__ + \"static/media/arrow_unactive.6754a4e6.svg\";","export default __webpack_public_path__ + \"static/media/arrow_hover.da913eec.svg\";","import \"../App.css\";\r\nimport arrow_unactive from \"../arrow_unactive.svg\";\r\nimport arrow_hover from \"../arrow_hover.svg\";\r\nimport { useState } from \"react\";\r\n\r\nfunction FilledButton(props) {\r\n  const [arrowHover, setArrowHover] = useState(false);\r\n\r\n  return (\r\n    <button\r\n      className={`${props.classType}__btn`}\r\n      onMouseOver={() => props.arrow && setArrowHover(true)}\r\n      onMouseLeave={() => props.arrow && setArrowHover(false)}\r\n    >\r\n      <p\r\n        className={`${props.classType}__btn-text`}\r\n        onMouseOver={() => props.arrow && setArrowHover(true)}\r\n        onMouseLeave={() => props.arrow && setArrowHover(true)}\r\n      >\r\n        {props.text}\r\n      </p>\r\n      {props.arrow ? (\r\n        <div className='arrow-wrapper'>\r\n          {arrowHover ? (\r\n            <img src={arrow_hover} alt='' />\r\n          ) : (\r\n            <img src={arrow_unactive} alt='' />\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilledButton;\r\n","import \"../App.css\";\r\nimport TextField from \"./TextField\";\r\nimport Title from \"./Title\";\r\nimport EmptyButton from \"./EmptyButton\";\r\nimport FilledButton from \"./FilledButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginCheckCreator, moveLoginCreator } from \"../redux/reducer\";\r\n\r\nfunction LoginForm() {\r\n  const isMove = useSelector(state => state.isMoveLogin)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLoginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.nativeEvent.submitter.className === \"login__btn\") {\r\n      if (e.target[0].value.trim() && e.target[2].value.trim()) {\r\n        dispatch(\r\n          loginCheckCreator([\r\n            e.target[0].value.trim(),\r\n            e.target[2].value.trim(),\r\n          ])\r\n        );\r\n      }\r\n    } else if (e.nativeEvent.submitter.className === \"forget-pas__btn\") {\r\n      dispatch(moveLoginCreator())\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n      <form className={`form ${isMove ? 'move' : ''}`} onSubmit={onLoginHandler}>\r\n        <Title message=\"Данные для входа\" />\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"e-mail@mail.ru\"\r\n          title=\"Логин*\"\r\n          classType=\"login\"\r\n          textType=\"email\"\r\n        />\r\n        <TextField\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          title=\"Пароль*\"\r\n          classType=\"password\"\r\n          textType=\"text\"\r\n        />\r\n        <EmptyButton\r\n          classType=\"forget-pas\"\r\n          text=\"Не помню пароль\"\r\n          type=\"submit\"\r\n        />\r\n        <FilledButton\r\n          classType=\"login\"\r\n          arrow={true}\r\n          text=\"Войти в систему\"\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/warning.40af0918.svg\";","import \"../App.css\";\r\nimport TextField from \"./TextField\";\r\nimport warning from \"../warning.svg\";\r\nimport Title from \"./Title\";\r\nimport EmptyButton from \"./EmptyButton\";\r\nimport FilledButton from \"./FilledButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { moveLoginCreator } from \"../redux/reducer\";\r\n\r\nfunction ForgetForm() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMove = useSelector(state => state.isMoveLogin)\r\n\r\n  const onBtnCLick = (e) => {\r\n    e.preventDefault();\r\n    if (e.nativeEvent.submitter.className === \"back__btn\") {\r\n      dispatch(moveLoginCreator())\r\n    }\r\n  };\r\n\r\n  return (\r\n      <form className={`forget__form ${isMove ? 'move' : ''}`} onSubmit={onBtnCLick}>\r\n        <Title message=\"Восстановление пароля\" />\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"e-mail@mail.ru\"\r\n          title=\"Логин или e-mail*\"\r\n          classType=\"login\"\r\n          textType=\"email\"\r\n          isForget={true}\r\n        />\r\n        <img className=\"warning\" src={warning} alt='' />\r\n        <div className=\"warning__message\">\r\n          Пароль будет отправлен на электронную почту, к которой привязана\r\n          учетная запись.\r\n        </div>\r\n        <EmptyButton classType=\"back\" text=\"Назад\" type=\"submit\" />\r\n        <FilledButton\r\n          classType=\"recover\"\r\n          arrow={false}\r\n          text=\"Восстановить\"\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default ForgetForm;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport LoginForm from \"./components/LoginForm\";\nimport ForgetForm from \"./components/ForgetForm\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n\n  const isMove = useSelector(state => state.isMoveLogin)\n  const isLogged = useSelector(state => state.correctData)\n\n  return (\n    <div className=\"background\">\n      <div className={`app-wrapper ${isMove ? 'move' : ''} ${isLogged ? 'logged' : ''}`}>\n        <Header />\n        <LoginForm />\n        <ForgetForm />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import reducer from './reducer'\r\n\r\nconst {createStore} = require('redux')\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}