{"version":3,"sources":["icons/logo.svg","icons/ellipse.svg","components/Header/Header.js","icons/cross.svg","icons/red_cross.svg","icons/check.svg","redux/reducer.js","components/TextField/TextField.js","components/Title/Title.js","components/EmptyButton/EmptyButton.js","icons/arrow_unactive.svg","icons/arrow_hover.svg","components/FilledButton/FilledButton.js","components/LoginForm/LoginForm.js","icons/warning.svg","components/ForgetForm/ForgetForm.js","App.js","redux/store.js","index.js"],"names":["Header","isLogged","useSelector","state","correctData","className","src","ellipse","alt","logo","LOGIN_CHECK","RETRY","MOVE_LOGIN","SET_VALIDATION","LOGIN","PASSWORD","initialState","wrongData","isMoveLogin","email","password","recoverEmail","setValidationCreator","value","type","moveLoginCreator","reducer","action","payload","TextField","props","useState","cross","imageSrc","setImageSrc","show","setShow","itemClass","setItemClass","errorClass","setErrorClass","inputValue","setInputValue","errorMessage","setErrorMessage","REG_EXP1","REG_EXP2","dispatch","useDispatch","appState","useEffect","isForget","classType","onClick","title","textType","placeholder","onChange","e","target","onBlur","test","check","form","length","red_cross","Title","message","EmptyButton","text","FilledButton","isActive","arrow","arrow_hover","arrow_unactive","LoginForm","isMove","onSubmit","preventDefault","nativeEvent","submitter","trim","ForgetForm","warning","App","store","createStore","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c7c52df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.216866a6.svg\";","export default __webpack_public_path__ + \"static/media/ellipse.f4884ca9.svg\";","import logo from \"../../icons/logo.svg\";\r\nimport ellipse from \"../../icons/ellipse.svg\";\r\nimport \"./Header.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Header() {\r\n  const isLogged = useSelector((state) => state.correctData);\r\n\r\n  return (\r\n    <div className={`header ${isLogged ? \"logged\" : \"\"} `}>\r\n      {isLogged ? null : <img src={ellipse} alt=\"\" />}\r\n      <img src={logo} className=\"header__logo\" alt=\"\" />\r\n      <div className=\"header__info\">Корпоративная информационная система</div>\r\n      <div className={`header__greeting ${isLogged ? \"logged\" : \"\"} `}>\r\n        Добрый день, Владислав!\r\n      </div>\r\n      <div className={`header__loader ${isLogged ? \"logged\" : \"\"} `}>\r\n        {\" \"}\r\n        <div className=\"lds-ring\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/cross.42e25dea.svg\";","export default __webpack_public_path__ + \"static/media/red_cross.b2709074.svg\";","export default __webpack_public_path__ + \"static/media/check.88895856.svg\";","const LOGIN_CHECK = \"LOGIN_CHECK\";\r\nconst RETRY = \"RETRY\";\r\nconst MOVE_LOGIN = 'MOVE_LOGIN'\r\nconst SET_VALIDATION = 'SET_VALIDATION'\r\nexport const LOGIN = \"pinchuk.fl@yandex.ru\";\r\nexport const PASSWORD = \"12345678\";\r\n\r\nconst initialState = {\r\n  wrongData: false,\r\n  correctData: false,\r\n  isMoveLogin: false,\r\n  email: false,\r\n  password: false,\r\n  recoverEmail: false\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_CHECK: {\r\n      if (\r\n        action.payload[0] === LOGIN &&\r\n        action.payload[1] === PASSWORD\r\n      ) {\r\n        return {\r\n          ...state,\r\n          correctData: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          wrongData: true,\r\n        };\r\n      }\r\n    }\r\n    case RETRY: {\r\n      return {\r\n        ...state,\r\n        wrongData: false,\r\n        correctData: false,\r\n      };\r\n    }\r\n    case SET_VALIDATION: {\r\n      return {\r\n        ...state,\r\n        [action.value]: !state[action.value]\r\n      }\r\n    }\r\n    case MOVE_LOGIN: {\r\n      return {\r\n        ...state,\r\n        isMoveLogin: !state.isMoveLogin\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setValidationCreator = (value) => ({\r\n  type: SET_VALIDATION,\r\n  value\r\n})\r\n\r\nexport const loginCheckCreator = (payload) => ({\r\n  type: LOGIN_CHECK,\r\n  payload,\r\n});\r\n\r\nexport const retryCreator = () => ({\r\n  type: RETRY,\r\n});\r\n\r\nexport const moveLoginCreator = () => ({\r\n  type: MOVE_LOGIN\r\n})\r\n\r\nexport default reducer;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./TextField.css\";\r\nimport cross from \"../../icons/cross.svg\";\r\nimport red_cross from \"../../icons/red_cross.svg\";\r\nimport check from \"../../icons/check.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { retryCreator, setValidationCreator } from \"../../redux/reducer\";\r\n\r\nfunction TextField(props) {\r\n\r\n  const [imageSrc, setImageSrc] = useState(cross);\r\n  const [show, setShow] = useState(false);\r\n  const [itemClass, setItemClass] = useState(\"\");\r\n  const [errorClass, setErrorClass] = useState(\"\");\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  \r\n  const REG_EXP1 = /^[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i;\r\n  const REG_EXP2 = /^[0-9a-z_-]+\\.[0-9a-z_-]+@[0-9a-z_-]+\\.[a-z]{2,5}$/i;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const appState = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (appState.email) {\r\n      dispatch(setValidationCreator(\"email\"));\r\n    }\r\n    if (appState.password) {\r\n      dispatch(setValidationCreator(\"password\"));\r\n    }\r\n    if (appState.recoverEmail) {\r\n      dispatch(setValidationCreator(\"recoverEmail\"));\r\n    }\r\n  }, [appState.isMoveLogin]);\r\n\r\n  if (appState.wrongData && props.type === \"text\") {\r\n    setErrorClass(\"invalid\");\r\n    setErrorMessage(\"Неверный e-mail или пароль\");\r\n    dispatch(retryCreator());\r\n  }\r\n\r\n  const onItemClick = () => {\r\n    setItemClass(\"-clicked\");\r\n    setShow(true);\r\n  };\r\n\r\n  const onInputClear = () => {\r\n    setInputValue(\"\");\r\n    setErrorClass(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  if (\r\n    (itemClass && appState.isMoveLogin && !props.isForget) ||\r\n    (itemClass && !appState.isMoveLogin && props.isForget)\r\n  ) {\r\n    setErrorClass(\"\");\r\n    setInputValue(\"\");\r\n    setErrorMessage(\"\");\r\n    setItemClass(\"\");\r\n    setShow(false);\r\n    setImageSrc(cross);\r\n  }\r\n\r\n  const onValidationCheck = (e) => {\r\n    if (e.target.className === \"form__login-email\") {\r\n      if (!REG_EXP1.test(e.target.value) && !REG_EXP2.test(e.target.value)) {\r\n        setErrorClass(\"invalid\");\r\n        setErrorMessage(\"Введите корректный e-mail\");\r\n      } else {\r\n        setImageSrc(check);\r\n        setErrorClass(\"\");\r\n        setErrorMessage(\"\");\r\n        setItemClass(\"-valid\");\r\n        if (e.target.form.className === \"forget__form move\") {\r\n          dispatch(setValidationCreator(\"recoverEmail\"));\r\n        } else {\r\n          dispatch(setValidationCreator(\"email\"));\r\n        }\r\n      }\r\n    } else if (e.target.className === \"form__password-text\") {\r\n      if (e.target.value.length < 8) {\r\n        setErrorClass(\"invalid\");\r\n        setErrorMessage(\"Пароль должен составлять не менее 8 символов\");\r\n      } else {\r\n        setImageSrc(check);\r\n        setErrorClass(\"\");\r\n        setErrorMessage(\"\");\r\n        setItemClass(\"-valid\");\r\n        dispatch(setValidationCreator(\"password\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`form__${props.classType}${itemClass} ${errorClass} `}\r\n        onClick={onItemClick}\r\n      >\r\n        <div className={`form__${props.classType}-label${itemClass}`}>\r\n          {props.title}\r\n        </div>\r\n        {show ? (\r\n          <input\r\n            className={`form__${props.classType}-${props.textType}`}\r\n            placeholder={props.placeholder}\r\n            type={props.type}\r\n            value={inputValue}\r\n            onChange={onInputChange}\r\n            onBlur={onValidationCheck}\r\n          />\r\n        ) : null}\r\n        {inputValue ? (\r\n          <button className=\"clear__btn\" onClick={onInputClear}>\r\n            {errorClass ? (\r\n              <img src={red_cross} alt=\"\" />\r\n            ) : (\r\n              <img src={imageSrc} alt=\"\" />\r\n            )}\r\n          </button>\r\n        ) : null}\r\n        {errorMessage ? (\r\n          <div className=\"form__error-message\">{errorMessage}</div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextField;\r\n","import './Title.css'\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"form__title\">{props.message}</div>)\r\n}\r\n\r\nexport default Title","import './EmptyButton.css'\r\n\r\nfunction EmptyButton (props) {\r\n  return <button className={`${props.classType}__btn`} >{props.text}</button>\r\n}\r\n\r\nexport default EmptyButton","export default __webpack_public_path__ + \"static/media/arrow_unactive.6754a4e6.svg\";","export default __webpack_public_path__ + \"static/media/arrow_hover.da913eec.svg\";","import \"./FilledButton.css\";\r\nimport arrow_unactive from \"../../icons/arrow_unactive.svg\";\r\nimport arrow_hover from \"../../icons/arrow_hover.svg\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction FilledButton(props) {\r\n  const appState = useSelector((state) => state)\r\n  let isActive\r\n\r\n  if (props.classType === 'recover') {\r\n    isActive = appState.recoverEmail\r\n  } else {\r\n    isActive = appState.email&&appState.password\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={`${props.classType}__btn ${isActive ? \"\" : \"disabled\"} `}\r\n    >\r\n      <p\r\n        className={`${props.classType}__btn-text ${isActive ? \"\" : \"disabled\"}`}\r\n      >\r\n        {props.text}\r\n      </p>\r\n      {props.arrow ? (\r\n        <div className=\"arrow-wrapper\">\r\n          {isActive ? (\r\n            <img src={arrow_hover} alt=\"\" />\r\n          ) : (\r\n            <img src={arrow_unactive} alt=\"\" />\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilledButton;\r\n","import \"./LoginForm.css\";\r\nimport TextField from \"../TextField/TextField\";\r\nimport Title from \"../Title/Title\";\r\nimport EmptyButton from \"../EmptyButton/EmptyButton\";\r\nimport FilledButton from \"../FilledButton/FilledButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginCheckCreator, moveLoginCreator } from \"../../redux/reducer\";\r\n\r\n\r\nfunction LoginForm() {\r\n  const isMove = useSelector(state => state.isMoveLogin)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLoginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.nativeEvent.submitter.className.trim() === \"login__btn\") {\r\n      if (e.target[0].value.trim() && e.target[2].value.trim()) {\r\n        dispatch(\r\n          loginCheckCreator([\r\n            e.target[0].value.trim(),\r\n            e.target[2].value.trim(),\r\n          ])\r\n        );\r\n      }\r\n    } else if (e.nativeEvent.submitter.className.trim() === \"forget-pas__btn\") {\r\n      dispatch(moveLoginCreator())\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n      <form className={`form ${isMove ? 'move' : ''}`} onSubmit={onLoginHandler}>\r\n        <Title message=\"Данные для входа\" />\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"e-mail@mail.ru\"\r\n          title=\"Логин*\"\r\n          classType=\"login\"\r\n          textType=\"email\"\r\n        />\r\n        <TextField\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          title=\"Пароль*\"\r\n          classType=\"password\"\r\n          textType=\"text\"\r\n        />\r\n        <div className='login__bottom-line'></div>\r\n        <EmptyButton\r\n          classType=\"forget-pas\"\r\n          text=\"Не помню пароль\"\r\n          type=\"submit\"\r\n        />\r\n        <FilledButton\r\n          classType=\"login\"\r\n          arrow={true}\r\n          text=\"Войти в систему\"\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/warning.40af0918.svg\";","import \"./ForgetForm.css\";\r\nimport TextField from \"../TextField/TextField\";\r\nimport Title from \"../Title/Title\";\r\nimport EmptyButton from \"../EmptyButton/EmptyButton\";\r\nimport FilledButton from \"../FilledButton/FilledButton\";\r\nimport warning from \"../../icons/warning.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { moveLoginCreator } from \"../../redux/reducer\";\r\n\r\nfunction ForgetForm() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMove = useSelector(state => state.isMoveLogin)\r\n\r\n  const onBtnCLick = (e) => {\r\n    e.preventDefault();\r\n    if (e.nativeEvent.submitter.className === \"back__btn\") {\r\n      dispatch(moveLoginCreator())\r\n    }\r\n  };\r\n\r\n  return (\r\n      <form className={`forget__form ${isMove ? 'move' : ''}`} onSubmit={onBtnCLick}>\r\n        <Title message=\"Восстановление пароля\" />\r\n        <TextField\r\n          type=\"text\"\r\n          placeholder=\"e-mail@mail.ru\"\r\n          title=\"Логин или e-mail*\"\r\n          classType=\"login\"\r\n          textType=\"email\"\r\n          isForget={true}\r\n        />\r\n        <img className=\"warning\" src={warning} alt='' />\r\n        <div className=\"warning__message\">\r\n          Пароль будет отправлен на электронную почту, к которой привязана\r\n          учетная запись.\r\n        </div>\r\n        <div className='forget__bottom-line'></div>\r\n        <EmptyButton classType=\"back\" text=\"Назад\" type=\"submit\" />\r\n        <FilledButton\r\n          classType=\"recover\"\r\n          arrow={false}\r\n          text=\"Восстановить\"\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default ForgetForm;","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport LoginForm from \"./components/LoginForm/LoginForm\";\nimport ForgetForm from \"./components/ForgetForm/ForgetForm\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n\n  const isMove = useSelector(state => state.isMoveLogin)\n  const isLogged = useSelector(state => state.correctData)\n\n  return (\n    <div className=\"background\">\n      <div className={`app-wrapper ${isMove ? 'move' : ''} ${isLogged ? 'logged' : ''}`}>\n        <Header />\n        <LoginForm />\n        <ForgetForm />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import reducer from './reducer'\r\n\r\nconst {createStore} = require('redux')\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}